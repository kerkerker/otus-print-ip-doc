digraph "is_string_like&lt; T, std::void_t&lt; typename std::enable_if_t&lt; std::is_same_v&lt; remove_cvref_t&lt; T &gt;, std::string &gt;||std::is_same_v&lt; remove_cvref_t&lt; T &gt;, char * &gt;||std::is_same_v&lt; remove_cvref&lt; T &gt;, std::string_view &gt; &gt; &gt; &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="is_string_like\< T,\l std::void_t\< typename\l std::enable_if_t\< std\l::is_same_v\< remove_cvref\l_t\< T \>, std::string \>\|\|std\l::is_same_v\< remove_cvref_t\l\< T \>, char * \>\|\|std::is_same\l_v\< remove_cvref\< T \>, std::string\l_view \> \> \> \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="true_type",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
